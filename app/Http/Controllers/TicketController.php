<?php

namespace App\Http\Controllers;

use App\Models\Ticket;
use Illuminate\Http\Request;
use Illuminate\Support\Carbon;
use Illuminate\Support\Facades\DB;

class TicketController
{
    /**
     * Display a list of all tickets.
     */
    public function index()
    {
        $tickets = Ticket::paginate(10);

        return response()->json([
            'data' => $tickets
        ]);
    }

    /**
     * Display a paginated to 10, list of all unprocessed tickets
     */
    public function getOpenTickets()
    {
        $tickets = Ticket::where('status', false)->paginate(10);

        return response()->json([
            'data' => $tickets
        ]);
    }

    /**
     * Display a paginated to 10, list of all processed tickets
     */
    public function getClosedTickets()
    {
        $tickets = Ticket::where('status', true)->paginate(10);

        return response()->json([
            'data' => $tickets
        ]);
    }

    public function getTicketsByUser(string $email)
    {
        // var_dump($email);

        $tickets = Ticket::where('author_email', $email)->paginate(10);

        return response()->json([
            'data' => $tickets
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        return response()->json([
            'data' => Ticket::create($request->all())
        ], 201);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Ticket $ticket)
    {
        $ticket->update([
            'status' => true,
        ]);

        return response()->json([
            'data' => $ticket
        ]);
    }

    public function stats()
    {
        $totalTickets = Ticket::count();

        $openTickets = Ticket::where('status', false)->count();

        // $submitters = DB::table('tickets')->selectRaw('author, count(author_email)')->groupBy('author_email', 'author')->orderByRaw('count(author_email) DESC')->get();

        // return $submitters;

        $highestTicketSubmitter = DB::table('tickets')->groupBy('author_email', 'author')->orderByRaw('count(author_email) DESC')->value('author');

        $lastProcessed = Ticket::where('status', true)->pluck('updated_at')->last();

        $processedTime = Carbon::parse($lastProcessed)->format('H:i');

        return response()->json([
            'data' => [
                'Total Tickets' => $totalTickets,
                'Unprocessed Tickets' => $openTickets,
                'Highest Submitter' => $highestTicketSubmitter,
                'Last Processed' => $processedTime,
            ]
            ]);
    }
}
