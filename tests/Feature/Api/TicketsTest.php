<?php

namespace Tests\Feature\Api;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use PHPUnit\Framework\Attributes\Test;
use Tests\TestCase;
use App\Models\Ticket;

class TicketsTest extends TestCase
{
    use RefreshDatabase;

    #[Test]
    public function can_get_all_tickets(): void
    {
        $ticket = Ticket::factory()->create();

        $response = $this->getJson(route('tickets.index'));

        $response->assertOk();

        $response->assertJson([
            'data' => [
                [
                    'id' => $ticket->id,
                    'subject' => $ticket->subject,
                    'content' => $ticket->content,
                    'status' => $ticket->status,
                    'author' => $ticket->author,
                    'author_email' => $ticket->author_email,
                ]
            ]
        ]);
    }

    #[Test]
    public function can_store_a_ticket(): void
    {
        $newTicket = Ticket::factory()->create();

        $response = $this->postJson(route('tickets.store'), $newTicket->toArray());

        $response->assertCreated();

        $response->assertJson([
            'data' => ['status' => $newTicket->status]
        ]);

        $this->assertDatabaseHas(
            'tickets',
            $newTicket->toArray()
        );
    }

    #[Test]
    public function can_update_status_of_a_ticket(): void
    {
        $existingTicket = Ticket::factory()->create();

        $response = $this->putJson(route('tickets.update', $existingTicket), $existingTicket->toArray());

        $response->assertJson([
            'data' => ['status' => true]
        ]);
    }
}
